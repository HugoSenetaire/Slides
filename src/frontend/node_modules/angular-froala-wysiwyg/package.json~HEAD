{
  "_from": "angular-froala-wysiwyg@^2.8.0",
  "_id": "angular-froala-wysiwyg@2.8.0",
  "_inBundle": false,
  "_integrity": "sha512-tPVLERSKdf7+MmDw8X8qBpX9zG05b9RKGuQj6zYky2DO/Z2YD0sOkua91wpQgn1q5iKbFoa6lh5yh2bWmoOXlQ==",
  "_location": "/angular-froala-wysiwyg",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "angular-froala-wysiwyg",
    "fetchSpec": "^2.8.0",
    "name": "angular-froala-wysiwyg",
    "raw": "angular-froala-wysiwyg@^2.8.0",
    "rawSpec": "^2.8.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular-froala-wysiwyg/-/angular-froala-wysiwyg-2.8.0.tgz",
  "_shasum": "19dcd540c8a797a61acb62790378a640bc6e6c88",
  "_shrinkwrap": null,
  "_spec": "angular-froala-wysiwyg@^2.8.0",
  "_where": "C:\\Users\\Matthieu\\Documents\\testGenSlide\\generateur_slides",
  "author": {
    "name": "Froala Labs",
    "url": "https://www.froala.com/"
  },
  "bugs": {
    "url": "https://github.com/froala/angular-froala-wysiwyg/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@types/jquery": "^2.0.40",
    "froala-editor": "^2.8.0"
  },
  "deprecated": false,
  "description": "Angular 2, Angular 4 and Angular 5 bindings for Froala WYSIWYG HTML rich text editor",
  "devDependencies": {},
  "homepage": "https://github.com/froala/angular-froala-wysiwyg#readme",
  "keywords": [
    "angular2",
    "angular4",
    "angular5",
    "editor",
    "froala",
    "html",
    "javascript",
    "jquery",
    "jquery-plugin",
    "ng2",
    "ng4",
    "ng5",
    "rich editor",
    "rich text editor",
    "rte",
    "text",
    "wysisyg"
  ],
  "license": "MIT",
  "main": "bundles/angular-froala-wysiwyg.umd.js",
  "module": "index.js",
  "name": "angular-froala-wysiwyg",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/common": "*",
    "@angular/compiler": "*",
    "@angular/core": "*",
    "@angular/forms": "*"
  },
  "readme": "# Angular Froala WYSIWYG Editor - [Demo](https://www.froala.com/wysiwyg-editor)\n\n[![npm](https://img.shields.io/npm/v/angular-froala-wysiwyg.svg)](https://www.npmjs.com/package/angular-froala-wysiwyg)\n[![npm](https://img.shields.io/npm/dm/angular-froala-wysiwyg.svg)](https://www.npmjs.com/package/angular-froala-wysiwyg)\n[![npm](https://img.shields.io/npm/l/angular-froala-wysiwyg.svg)](https://www.npmjs.com/package/angular-froala-wysiwyg)\n\n>Angular 2, Angular 4 and Angular 5 bindings for Froala WYSIWYG Editor.\n\n![WYSIWYG HTML Editor](https://raw.githubusercontent.com/froala/wysiwyg-editor/master/editor.jpg)\n\n## Table of contents\n1. [Installation instructions](#installation-instructions)\n2. [Update editor instructions](#update-editor-instructions)\n3. [Integration](#integration)\n   - [angular-cli](#use-with-angular-cli)\n   - [ionic v2 or v3](#use-with-ionic-v2-or-v3)\n   - [webpack](#use-with-webpack)\n   - [angular-starter](#use-with-webpack)\n   - [angular-seed](#use-with-angular-seed)\n   - [System.js and JIT](#use-with-systemjs-and-jit)\n   - [AOT](#use-with-aot)\n4. [Usage](#usage)\n5. [Manual Initialization](#manual-initialization)\n6. [Displaying HTML](#displaying-html)\n7. [License](#license)\n8. [Development environment setup](#development-environment-setup)\n\n## Installation instructions\n\nInstall `angular-froala-wysiwyg` from `npm`\n\n```bash\nnpm install angular-froala-wysiwyg\n```\n\nYou will need CSS styles and Font Awesome\n\n```html\n<!-- index.html -->\n<link href=\"node_modules/froala-editor/css/froala_editor.pkgd.min.css\" rel=\"stylesheet\">\n<link href=\"node_modules/font-awesome/css/font-awesome.min.css\" rel=\"stylesheet\">\n```\n\n## Update editor instructions\n\n```bash\nnpm update froala-editor --save\n```\n\n## Integration\n\n### Use with Angular CLI\n\n#### Installing @angular/cli\n\n*Note*: you can skip this part if you already have application generated.\n\n```bash\nnpm install -g @angular/cli\nng new my-app\ncd my-app\n```\n\n#### Add angular-froala-wysiwyg\n\n- install `angular-froala-wysiwyg`\n\n```bash\nnpm install angular-froala-wysiwyg --save\n```\n\n- open `src/app/app.module.ts` and add\n\n```typescript\n// Import Angular plugin.\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\n...\n\n@NgModule({\n   ...\n   imports: [FroalaEditorModule.forRoot(), FroalaViewModule.forRoot() ... ],\n   ...\n})\n```\n\n- open `.angular-cli.json` file and insert a new entry into the `styles` array\n\n```json\n\"styles\": [\n  \"styles.css\",\n  \"../node_modules/froala-editor/css/froala_editor.pkgd.min.css\",\n  \"../node_modules/froala-editor/css/froala_style.min.css\",\n  \"../node_modules/font-awesome/css/font-awesome.css\"\n]\n```\n\n- in .`angular-cli.json` file insert a new entry into the `scripts` array\n\n```json\n\"scripts\": [\n  \"../node_modules/jquery/dist/jquery.min.js\",\n  \"../node_modules/froala-editor/js/froala_editor.pkgd.min.js\"\n]\n```\n\n- open `src/app/app.component.html` and add\n\n```html\n<div [froalaEditor]>Hello, Froala!</div>\n```\n\n#### Run angular-cli\n```bash\nng serve\n```\n\n\n\n### Use with `ionic v2 or v3`\n\n#### Create Ionic app\n\n*Note*: you can skip this part if you already have application generated.\n\n```bash\nnpm install -g cordova ionic\nionic start myApp blank\ncd myApp\n```\n\n\n\n#### Add angular-froala-wysiwyg\n\nFor v3 make sure that you use the latest version of ionic and also the latest version of angular.\n\nInstalling Froala Wysiwyg Editor in Ionic is fairly easy, it can be done using npm:\n```bash\nnpm install angular-froala-wysiwyg --save\n```\n- open `src/app/app.module.ts` and add\n\n```typescript\n// Import Froala Editor.\nimport \"froala-editor/js/froala_editor.pkgd.min.js\";\n\n// Import Angular2 plugin.\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\n...\n\n@NgModule({\n   ...\n   imports: [FroalaEditorModule.forRoot(), FroalaViewModule.forRoot() ... ],\n   ...\n})\n```\n- open `src/app/main.ts` and add\n```javascript\nimport * as $ from 'jquery';\nwindow[\"$\"] = $;\nwindow[\"jQuery\"] = $;\n```\n- In `package.json` add the following:\n\n```json\n\"config\": {\n    \"ionic_copy\": \"./config/copy.config.js\"\n}\n```\n- Run the following commands\n\n```bash\nmkdir config\ncp node_modules/@ionic/app-scripts/config/copy.config.js ./config/\n```\n\n- Open `config/copy.config.js` file and add the following at the beginning of `module.exports`\n\n```javascript\nmodule.exports = {\n  copyFroalaEditorCss: {\n    src: ['{{ROOT}}/node_modules/froala-editor/css/froala_editor.pkgd.min.css', '{{ROOT}}/node_modules/froala-editor/css/froala_style.min.css'],\n    dest: '{{BUILD}}'\n  },\n  copyFontAwesome: {\n    src: '{{ROOT}}/node_modules/font-awesome/css/font-awesome.min.css',\n    dest: '{{BUILD}}'\n  },\n  copyFontsAwesomeFonts: {\n    src: '{{ROOT}}/node_modules/font-awesome/fonts/*',\n    dest: '{{WWW}}/fonts'\n  },\n  ...\n}\n```\n\n- Open `src/index.html` file and add in the `<head>` tag:\n\n```html\n<link rel=\"stylesheet\" href=\"build/font-awesome.min.css\">\n<link rel=\"stylesheet\" href=\"build/froala_editor.pkgd.min.css\">\n<link rel=\"stylesheet\" href=\"build/froala_style.min.css\">\n```\nIn your desired view add the Froala Editor like this:\n\n```html\n<div [froalaEditor]>Hello, Froala!</div>\n```\n\n#### Run your App\n\n```bash\nionic serve\n```\n\n\n\n### Use with `webpack`\n\n#### Create webpack app\n\n*Note*: you can skip this part if you already have application generated.\n\n```bash\ngit clone --depth 1 https://github.com/AngularClass/angular-starter.git\ncd angular-starter\nnpm install\n```\n\n#### Add angular-froala-wysiwyg\n\n- install `angular-froala-wysiwyg`\n\n```bash\nnpm install angular-froala-wysiwyg --save\n```\n\n- open `src/app/app.module.ts` and add\n\n```typescript\n// Import the Froala Editor plugin.\nimport \"froala-editor/js/froala_editor.pkgd.min.js\";\n\n// Import Angular plugin.\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\n...\n\n@NgModule({\n   ...\n   imports: [FroalaEditorModule.forRoot(), FroalaViewModule.forRoot(), ... ],\n   ...\n})\n```\n\n- open `src/app/app.component.ts` and add to the template\n\n```html\n<div [froalaEditor]>Hello, Froala!</div>\n```\n\n- open `config/webpack.common.js` and add the following to `CopyWebpackPlugin`\n\n```javascript\n{\n  from: 'node_modules/froala-editor/css/',\n  to: 'assets/froala-editor/css/',\n},\n{\n  from: 'node_modules/font-awesome/css/font-awesome.min.css',\n  to: 'assets/font-awesome/css/font-awesome.min.css',\n},\n{\n  from: 'node_modules/font-awesome/fonts',\n  to: 'assets/font-awesome/fonts'\n}\n```\n\n- in `config/webpack.common.js` copy the following to `plugins`\n\n```javascript\nnew webpack.ProvidePlugin({\n  $: \"jquery\",\n  jQuery: \"jquery\"\n})\n```\n\n- open `config/head-config.common.js` and add a new entry to link\n\n```javascript\n{ rel: 'stylesheet', href: '/assets/font-awesome/css/font-awesome.min.css' },\n{ rel: 'stylesheet', href: '/assets/froala-editor/css/froala_editor.pkgd.min.css' },\n{ rel: 'stylesheet', href: '/assets/froala-editor/css/froala_style.min.css' }\n```\n\n#### Run webpack app\n\n```bash\nnpm run start\n```\n\n\n\n### Use with `angular-seed`\n\n#### Create angular-seed app\n\n*Note*: you can skip this part if you already have application generated. For more details please also read: https://github.com/mgechev/angular-seed.\n\n```bash\ngit clone --depth 1 https://github.com/mgechev/angular-seed.git\ncd angular-seed\nnpm install\n```\n\n#### Add angular-froala-wysiwyg\n\n- install `angular-froala-wysiwyg`\n\n```bash\nnpm install angular-froala-wysiwyg --save\n```\n\n- open `tools/config/project.config.ts` file and **uncomment** the following line from the top of the file\n\n```typescript\nimport { ExtendPackages } from './seed.config.interfaces';\n```\n\n- in `tools/config/project.config.ts` file add\n\n```typescript\n...\n\nthis.NPM_DEPENDENCIES = [\n  ...this.NPM_DEPENDENCIES,\n  { src: 'jquery/dist/jquery.min.js', inject: 'libs'},\n  { src: 'froala-editor/js/froala_editor.pkgd.min.js', inject: 'libs' },\n  { src: 'font-awesome/css/font-awesome.min.css', inject: true },\n  { src: 'froala-editor/css/froala_editor.pkgd.min.css', inject: true },\n  { src: 'froala-editor/css/froala_style.min.css', inject: true }\n];\n\n...\n\nlet additionalPackages: ExtendPackages[] = [\n  // required for dev build\n  {\n    name:'angular-froala-wysiwyg',\n    path:'node_modules/angular-froala-wysiwyg/bundles/angular-froala-wysiwyg.umd.min.js'\n  },\n\n  // required for prod build\n  {\n    name:'angular-froala-wysiwyg/*',\n    path:'node_modules/angular-froala-wysiwyg/bundles/angular-froala-wysiwyg.umd.min.js'\n  }\n]\n\nthis.addPackagesBundles(additionalPackages);\n```\n\n- open `src/client/app/home/home.module.ts` and add\n\n```typescript\n// Import Angular2 plugin.\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\n...\n\n@NgModule({\n   ...\n   imports: [FroalaEditorModule.forRoot(), FroalaViewModule.forRoot() ... ],\n   ...\n})\n```\n\n- open `src/client/app/home/home.component.html` and add\n\n```html\n<div [froalaEditor]>Hello, Froala!</div>\n```\n\n#### Run webpack app\n\n```bash\nnpm run start\n```\n\n\n\n### Use with `system.js` and `JIT`\n\n#### Create Angular app\n\n*Note*: you can skip this part if you already have application generated.\n\n```bash\ngit clone https://github.com/angular/quickstart.git angular-quickstart\ncd angular-quickstart\nnpm install\n```\n\n#### Add angular-froala-wysiwyg\n\n- install `angular-froala-wysiwyg`\n\n```bash\nnpm install angular-froala-wysiwyg --save\n```\n\n- open `src/index.html` and add\n\n```html\n<link rel=\"stylesheet\" href=\"node_modules/font-awesome/css/font-awesome.min.css\">\n<link rel=\"stylesheet\" href=\"node_modules/froala-editor/css/froala_editor.pkgd.min.css\">\n<link rel=\"stylesheet\" href=\"node_modules/froala-editor/css/froala_style.min.css\">\n\n<script src=\"node_modules/jquery/dist/jquery.min.js\"></script>\n<script src=\"node_modules/froala-editor/js/froala_editor.pkgd.min.js\"></script>\n```\n\n- open `src/app/app.module.ts` and add\n\n```typescript\n// Import Angular2 plugin.\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\n...\n\n@NgModule({\n   ...\n   imports: [FroalaEditorModule.forRoot(), FroalaViewModule.forRoot(), ... ],\n   ...\n})\n```\n\n- open `src/app/app.component.ts` file and add to the template\n\n```html\n<div [froalaEditor]>Hello, Froala!</div>\n```\n\n- open `src/systemjs.config.js` file and add to map\n\n```javascript\nmap: {\n  ...\n  'angular-froala-wysiwyg': 'npm:angular-froala-wysiwyg/bundles/angular-froala-wysiwyg.umd.js',\n  ...\n}\n```\n\n```html\n<div [froalaEditor]>Hello, Froala!</div>\n```\n\n- ​\n\n#### Run app\n\n```bash\nnpm run start\n```\n\n\n\n### Use with `aot`\n\n#### Create Angular app\n\n*Note*: you can skip this part if you already have application generated.\n\n```bash\ngit clone https://github.com/angular/quickstart.git angular-quickstart\ncd angular-quickstart\nnpm install\n```\n\nInstall additional dependencies. *Make sure that there is no UNMET PEER DEPENDENCY.*\n\n```bash\nnpm install @angular/compiler-cli @angular/platform-server --save\nnpm install rollup rollup-plugin-node-resolve rollup-plugin-commonjs rollup-plugin-uglify --save-dev\nnpm install lite-server --save-dev\n```\n\nCopy `scr/tsconfig.json` to a new file called `tsconfig-aot.json` in the root of the project, then modify it as follows.\n\n```json\n{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"module\": \"es2015\",\n    \"moduleResolution\": \"node\",\n    \"sourceMap\": true,\n    \"emitDecoratorMetadata\": true,\n    \"experimentalDecorators\": true,\n    \"lib\": [\"es2015\", \"dom\"],\n    \"noImplicitAny\": true,\n    \"suppressImplicitAnyIndexErrors\": true,\n    \"typeRoots\": [\n      \"./node_modules/@types/\"\n    ]\n  },\n\n  \"files\": [\n    \"src/app/app.module.ts\",\n    \"src/main.ts\"\n  ],\n\n  \"angularCompilerOptions\": {\n   \"genDir\": \"aot\",\n   \"skipMetadataEmit\" : true\n }\n}\n```\n\nCreate a configuration file (`rollup-config.js`) in the project root directory to tell Rollup how to process the application.\n\n```javascript\nimport nodeResolve from 'rollup-plugin-node-resolve';\nimport commonjs    from 'rollup-plugin-commonjs';\nimport uglify      from 'rollup-plugin-uglify';\n\nexport default {\n  entry: 'src/main.js',\n  dest: 'src/build.js', // output a single application bundle\n  sourceMap: false,\n  format: 'iife',\n  onwarn: function(warning) {\n    // Skip certain warnings\n\n    // should intercept ... but doesn't in some rollup versions\n    if ( warning.code === 'THIS_IS_UNDEFINED' ) { return; }\n\n    // console.warn everything else\n    console.warn( warning.message );\n  },\n  plugins: [\n      nodeResolve({jsnext: true, module: true}),\n      commonjs({\n        include: 'node_modules/rxjs/**',\n      }),\n      uglify()\n  ]\n};\n```\n\nUpdate `src/main.ts` file for AOT:\n\n```typescript\nimport { platformBrowser }    from '@angular/platform-browser';\nimport { AppModuleNgFactory } from '../aot/src/app/app.module.ngfactory';\n\nconsole.log('Running AOT compiled');\nplatformBrowser().bootstrapModuleFactory(AppModuleNgFactory);\n```\n\n#### Add angular-froala-wysiwyg\n\n- install `angular-froala-wysiwyg`\n\n```bash\nnpm install angular-froala-wysiwyg --save\n```\n\n- open `src/index.html` and add\n\n```html\n<link rel=\"stylesheet\" href=\"node_modules/font-awesome/css/font-awesome.min.css\">\n<link rel=\"stylesheet\" href=\"node_modules/froala-editor/css/froala_editor.pkgd.min.css\">\n<link rel=\"stylesheet\" href=\"node_modules/froala-editor/css/froala_style.min.css\">\n\n<script src=\"node_modules/jquery/dist/jquery.min.js\"></script>\n<script src=\"node_modules/froala-editor/js/froala_editor.pkgd.min.js\"></script>\n```\n\n- open `src/app/app.module.ts` and add\n\n```typescript\n// Import Angular2 plugin.\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\n...\n\n@NgModule({\n   ...\n   imports: [FroalaEditorModule.forRoot(), FroalaViewModule.forRoot(), ... ],\n   ...\n})\n```\n\n- open `src/app/app.component.ts` file and add to the template\n\n```html\n<div [froalaEditor]>Hello, Froala!</div>\n```\n\n- open `rollup-config.js` and add the following\n\n```javascript\n//paths are relative to the execution path\nexport default {\n  ...\n  plugins: [\n    ...\n    commonjs({\n      include: [\n        'node_modules/rxjs/**',\n        'node_modules/angular-froala-wysiwyg/**'\n      ]\n    }),\n    ...\n  ]\n}\n```\n\n#### Run app\n\n```bash\nnode_modules/.bin/ngc -p tsconfig-aot.json\nnode_modules/.bin/rollup -c rollup-config.js -c rollup-config.js\nlite-server\n```\n\n\n\n## Usage\n\n### Options\n\nYou can pass editor options as Input (optional).\n\n`[froalaEditor]='options'`\n\nYou can pass any existing Froala option. Consult the [Froala documentation](https://www.froala.com/wysiwyg-editor/docs/options) to view the list of all the available options:\n\n```typescript\npublic options: Object = {\n  placeholderText: 'Edit Your Content Here!',\n  charCounterCount: false\n}\n```\n\nAditional option is used:\n* **immediateAngularModelUpdate**: (default: false) This option synchronizes the angular model as soon as a key is released in the editor. Note that it may affect performances.\n\n\n\n### Events and Methods\n\nEvents can be passed in with the options, with a key events and object where the key is the event name and the value is the callback function.\n\n```typescript\npublic options: Object = {\n  placeholder: \"Edit Me\",\n  events : {\n    'froalaEditor.focus' : function(e, editor) {\n      console.log(editor.selection.get());\n    }\n  }\n}\n```\n\nUsing the editor instance from the arguments of the callback you can call editor methods as described in the [method docs](http://froala.com/wysiwyg-editor/docs/methods).\n\nFroala events are described in the [events docs](https://froala.com/wysiwyg-editor/docs/events).\n\n\n\n### Model\n\nThe WYSIWYG HTML editor content model.\n\n`[(froalaModel)]=\"editorContent\"`\n\nPass initial content:\n\n```typescript\npublic editorContent: string = 'My Document\\'s Title'\n```\n\nUse the content in other places:\n\n```html\n<input [ngModel]=\"editorContent\"/>\n<input [(ngModel)]=\"editorContent\"/> <!-- For two way binding -->\n```\n\nOther two way binding example:\n\n```html\n<div [froalaEditor] [(froalaModel)]=\"editorContent\"></div>\n<div [froalaEditor] [(froalaModel)]=\"editorContent\"></div>\n```\n\nUse it with reactive forms:\n\n```html\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <textarea [froalaEditor] formControlName=\"formModel\"></textarea>\n  <button type=\"submit\">Submit</button>\n</form>\n```\n\nIf you want to use two-way binding to display de form model in other places you must include `[(froalaModel)]`:\n\n```html\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <textarea [froalaEditor] formControlName=\"formModel\" [(froalaModel)]=\"form.formModel\"></textarea>\n  <div [froalaView]=\"form.formModel\"></div>\n  <button type=\"submit\">Submit</button>\n</form>\n```\n\nIf you want to wrap froalaEditor directive into a component that supports reactive forms please see [froala.component.ts](https://github.com/froala/angular-froala-wysiwyg/blob/master/demo/src/app/froala.component.ts) from demo.\n\n### Extend functionality\n\nYou can extend the functionality by adding a custom button like bellow:\n\n```typescript\n\n// We will make usage of the Init hook and make the implementation there.\nimport { Component, OnInit  } from '@angular/core';\ndeclare var $ :any;\n\n@Component({\n  selector: 'app-demo',\n  template: `<div class=\"sample\">\n               <h2>Sample 11: Add Custom Button</h2>\n               <div [froalaEditor]=\"options\" [(froalaModel)]=\"content\" ></div>\n             </div>`,\n\n\nexport class AppComponent implements OnInit{\n\n  ngOnInit () {\n    $.FroalaEditor.DefineIcon('alert', {NAME: 'info'});\n    $.FroalaEditor.RegisterCommand('alert', {\n      title: 'Hello',\n      focus: false,\n      undo: false,\n      refreshAfterCallback: false,\n\n      callback: function () {\n        alert('Hello!');\n      }\n    });\n  }\n\n  public options: Object = {\n    charCounterCount: true,\n    toolbarButtons: ['bold', 'italic', 'underline', 'paragraphFormat','alert'],\n    toolbarButtonsXS: ['bold', 'italic', 'underline', 'paragraphFormat','alert'],\n    toolbarButtonsSM: ['bold', 'italic', 'underline', 'paragraphFormat','alert'],\n    toolbarButtonsMD: ['bold', 'italic', 'underline', 'paragraphFormat','alert'],\n  };\n}\n```\n\n\n### Special tags\n\nYou can also use the editor on **img**, **button**, **input** and **a** tags:\n\n```html\n<img [froalaEditor] [(froalaModel)]=\"imgObj\"/>\n```\n\nThe model must be an object containing the attributes for your special tags. Example:\n\n```typescript\npublic imgObj: Object = {\n  src: 'path/to/image.jpg'\n};\n```\n\nThe froalaModel will change as the attributes change during usage.\n\n* froalaModel can contain a special attribute named **innerHTML** which inserts innerHTML in the element: If you are using 'button' tag, you can specify the button text like this:\n\n```typescript\npublic buttonModel: Object = {\n  innerHTML: 'Click Me'\n};\n```\nAs the button text is modified by the editor, the **innerHTML** attribute from buttonModel model will be modified too.\n\n\n\n### Specific option for special tags\n\n* **angularIgnoreAttrs**: (default: null) This option is an array of attributes that you want to ignore when the editor updates the froalaModel:\n\n```typescript\npublic inputOptions: Object = {\n  angularIgnoreAttrs: ['class', 'id']\n};\n```\n\n\n\n## Manual Initialization\n\nGets the functionality to operate on the editor: create, destroy and get editor instance. Use it if you want to manually initialize the editor.\n\n`(froalaInit)=\"initialize($event)\"`\n\nWhere `initialize` is the name of a function in your component which will receive an object with different methods to control the editor initialization process.\n\n```typescript\npublic initialize(initControls) {\n  this.initControls = initControls;\n  this.deleteAll = function() {\n  \tthis.initControls.getEditor()('html.set', '');\n  };\n}\n```\n\nThe object received by the function will contain the following methods:\n\n- **initialize**: Call this method to initialize the Froala Editor\n- **destroy**: Call this method to destroy the Froala Editor\n- **getEditor**: Call this method to retrieve the editor that was created. This method will return *null* if the editor was not yet created\n\n\n\n\n## Displaying HTML\n\nTo display content created with the froala editor use the froalaView directive.\n\n`[froalaView]=\"editorContent\"`\n\n```html\n<div [froalaEditor] [(froalaModel)]=\"editorContent\"></div>\n<div [froalaView]=\"editorContent\"></div>\n```\n\n\n\n## License\n\nThe `angular-froala-wyswiyg` project is under MIT license. However, in order to use Froala WYSIWYG HTML Editor plugin you should purchase a license for it.\n\nFroala Editor has [3 different licenses](http://froala.com/wysiwyg-editor/pricing) for commercial use.\nFor details please see [License Agreement](http://froala.com/wysiwyg-editor/terms).\n\n\n\n## Development environment setup\n\nIf you want to contribute to angular-froala-wyswiyg, you will first need to install the required tools to get the project going.\n\n#### Prerequisites\n\n* [Node Package Manager](https://npmjs.org/) (NPM)\n* [Git](http://git-scm.com/)\n\n#### Install dependencies\n\n    $ npm install\n\n#### Build\n\n    $ npm run demo.build\n\n#### Run Demo\n\n    $ npm run start\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/froala/angular-froala-wysiwyg.git"
  },
  "typings": "index.d.ts",
  "version": "2.8.0"
}
